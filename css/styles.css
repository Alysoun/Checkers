:root {
    --square-size: min(10vw, 60px);
    --dark-square: #b58863;
    --light-square: #ffffff;
    --red-piece: #ff1744;
    --black-piece: #1a1a1a;
    --board-border: #2d1810;
    --board-shadow: rgba(0, 0, 0, 0.5);
    --piece-shadow: rgba(0, 0, 0, 0.6);
    --highlight-color: #ffd700;
    --piece-height: 4px;
    --board-angle: 25deg;
    --board-scale: 0.95;
    --board-depth: 30px;
    --square-bevel: 2px;
    --ambient-light: rgba(255, 255, 255, 0.8);
    --piece-shine: rgba(255, 255, 255, 0.4);
    --wood-dark: #5d4037;
    --wood-light: #f7f3f2;
    --gold-gradient: linear-gradient(145deg, #ffd700, #ffa000);
    --red-gradient: linear-gradient(145deg, #ff5252, #ff1744, #d50000);
    --black-gradient: linear-gradient(145deg, #424242, #212121, #000000);
    --square-border: #2d1810;
    --board-light: #e8d0c3;
    --board-dark: #4a3b35;
    --red-piece: #ff0000;
    --black-piece: #000000;
}

body {
    margin: 0;
    padding: 0;
    min-height: 100vh;
    background: linear-gradient(135deg, #1a237e, #311b92);
    color: white;
    font-family: 'Arial', sans-serif;
    display: flex;
    justify-content: center;
    align-items: center;
    position: relative;
    overflow: hidden;
}

body::before {
    content: '';
    position: absolute;
    top: 0;
    left: 0;
    right: 0;
    bottom: 0;
    background-image: 
        linear-gradient(45deg, 
            rgba(255, 255, 255, 0.05) 25%, 
            transparent 25%, 
            transparent 75%, 
            rgba(255, 255, 255, 0.05) 75%),
        linear-gradient(45deg, 
            rgba(255, 255, 255, 0.05) 25%, 
            transparent 25%, 
            transparent 75%, 
            rgba(255, 255, 255, 0.05) 75%);
    background-size: 60px 60px;
    background-position: 0 0, 30px 30px;
    animation: backgroundShift 60s linear infinite;
    opacity: 0.3;
}

.game-container {
    background: rgba(255, 255, 255, 0.1);
    backdrop-filter: blur(10px);
    padding: 2rem;
    border-radius: 15px;
    box-shadow: 
        0 15px 35px rgba(0, 0, 0, 0.2),
        0 5px 15px rgba(0, 0, 0, 0.1);
    border: 1px solid rgba(255, 255, 255, 0.1);
    transition: transform 0.3s ease;
}

.game-info {
    color: white;
    text-align: center;
    margin-bottom: 1rem;
    font-size: 1.2em;
    text-shadow: 0 2px 4px rgba(0, 0, 0, 0.2);
}

.controls {
    margin-top: 2rem;
    display: flex;
    justify-content: center;
    gap: 1rem;
}

button {
    background: linear-gradient(145deg, #43a047, #388e3c);
    color: white;
    border: none;
    padding: 0.8rem 1.5rem;
    border-radius: 8px;
    cursor: pointer;
    font-size: 1em;
    transition: all 0.3s ease;
    box-shadow: 
        0 4px 15px rgba(0, 0, 0, 0.2),
        inset 1px 1px 1px rgba(255, 255, 255, 0.3);
}

button:hover {
    transform: translateY(-2px);
    box-shadow: 
        0 6px 20px rgba(0, 0, 0, 0.3),
        inset 1px 1px 1px rgba(255, 255, 255, 0.3);
}

@keyframes backgroundShift {
    0% {
        background-position: 0 0, 30px 30px;
    }
    100% {
        background-position: 1000px 0, 1030px 30px;
    }
}

@media (max-width: 768px) {
    .game-container {
        padding: 1rem;
        margin: 1rem;
    }
    
    .game-info {
        font-size: 1em;
    }
}

.board {
    display: grid;
    grid-template-columns: repeat(8, var(--square-size));
    grid-template-rows: repeat(8, var(--square-size));
    border: 2px solid var(--board-border);
    padding: 2px;
    background: var(--board-border);
    margin: 40px auto;
    position: relative;
    transform-style: preserve-3d;
    transform: perspective(1200px) rotateX(var(--board-angle)) scale(var(--board-scale));
    transition: transform 0.5s ease;
    gap: 1px;
    perspective: 1000px;
}

.board::before {
    content: '';
    position: absolute;
    width: 100%;
    height: var(--board-depth);
    background: 
        repeating-linear-gradient(
            90deg,
            var(--wood-dark),
            var(--wood-dark) 15px,
            var(--wood-light) 15px,
            var(--wood-light) 30px
        );
    transform: rotateX(-90deg) translateY(calc(var(--board-depth) * -0.5));
    transform-origin: top;
    box-shadow: 
        0 var(--board-depth) 30px rgba(0, 0, 0, 0.4),
        inset 0 0 20px rgba(0, 0, 0, 0.4);
}

.board:hover {
    transform: perspective(1200px) rotateX(calc(var(--board-angle) - 5deg)) scale(var(--board-scale));
}

.square {
    width: var(--square-size);
    height: var(--square-size);
    position: relative;
    transform-style: preserve-3d;
    transition: transform 0.3s ease;
    display: flex;
    justify-content: center;
    align-items: center;
    border: 1px solid var(--square-border);
}

.square.dark {
    background: var(--board-dark);
    box-shadow: inset -1px -1px 2px rgba(0, 0, 0, 0.2);
}

.square.light {
    background: var(--board-light);
    box-shadow: inset 1px 1px 2px rgba(255, 255, 255, 0.2);
}

.square.dark, .square.light {
    transform: translateZ(2px);
}

.piece {
    width: 80%;
    height: 80%;
    border-radius: 50%;
    position: absolute;
    left: 50%;
    top: 50%;
    transform-style: preserve-3d;
    transition: all 0.3s cubic-bezier(0.4, 0, 0.2, 1);
}

/* Base piece styling with indent effect */
.piece::before {
    content: '';
    position: absolute;
    width: 80%;
    height: 80%;
    border-radius: 50%;
    top: 10%;
    left: 10%;
    background: inherit;
    box-shadow: inset 0 0 8px rgba(0, 0, 0, 0.5);
}

/* Red piece specific styling */
.piece.red {
    background: var(--red-piece);
    transform: translate(-50%, -50%) translateZ(var(--piece-height));
    box-shadow: 
        0 var(--piece-height) 15px rgba(0, 0, 0, 0.3),
        inset 2px 2px 5px var(--piece-shine),
        inset -2px -2px 5px rgba(0, 0, 0, 0.3);
}

/* Black piece specific styling */
.piece.black {
    background: var(--black-piece);
    transform: translate(-50%, -50%) translateZ(var(--piece-height));
    box-shadow: 
        0 var(--piece-height) 15px rgba(0, 0, 0, 0.3),
        inset 2px 2px 8px rgba(255, 255, 255, 0.15),  /* Lighter inner top-left */
        inset -2px -2px 8px rgba(0, 0, 0, 0.8);      /* Darker inner bottom-right */
}

/* Enhanced indentation for black pieces */
.piece.black::before {
    content: '';
    position: absolute;
    width: 80%;
    height: 80%;
    border-radius: 50%;
    top: 10%;
    left: 10%;
    background: inherit;
    box-shadow: 
        inset 0 0 10px rgba(255, 255, 255, 0.1),  /* Subtle rim light */
        inset 2px 2px 8px rgba(255, 255, 255, 0.15),
        inset -2px -2px 8px rgba(0, 0, 0, 0.8);
    border: 1px solid rgba(255, 255, 255, 0.05);  /* Very subtle rim */
}

/* Optional: Add subtle highlight on hover */
.piece.black:hover::before {
    box-shadow: 
        inset 0 0 15px rgba(255, 255, 255, 0.15),
        inset 2px 2px 10px rgba(255, 255, 255, 0.2),
        inset -2px -2px 10px rgba(0, 0, 0, 0.9);
}

/* Hover effects */
.piece:hover {
    transform: translate(-50%, -50%) translateZ(calc(var(--piece-height) * 1.5));
    cursor: pointer;
}

/* King piece styling */
.piece.king::after {
    content: 'â™”';  /* Unicode crown symbol */
    position: absolute;
    width: 100%;
    height: 100%;
    display: flex;
    align-items: center;
    justify-content: center;
    font-size: 2em;
    color: rgba(255, 255, 255, 0.8);
    text-shadow: 
        0 0 5px rgba(0, 0, 0, 0.5),
        0 0 10px var(--highlight-color);
    pointer-events: none;
}

/* Specific styling for black kings */
.piece.king.black::after {
    color: rgba(255, 255, 255, 0.4);
    text-shadow: 
        0 0 5px rgba(0, 0, 0, 0.8),
        0 0 10px var(--highlight-color);
}

/* Optional: Add a subtle glow animation */
@keyframes crownGlow {
    0%, 100% { opacity: 0.8; }
    50% { opacity: 1; }
}

.piece.king::after {
    animation: crownGlow 2s ease-in-out infinite;
}

.move-helper {
    width: 40%;
    height: 40%;
    border-radius: 50%;
    background: radial-gradient(
        circle,
        rgba(255, 255, 0, 0.9) 0%,
        rgba(255, 215, 0, 0.7) 50%,
        rgba(255, 215, 0, 0.3) 100%
    );
    box-shadow: 
        0 0 10px #ffd700,
        0 0 20px rgba(255, 215, 0, 0.6);
    opacity: 0.9;
    position: absolute;
    top: 50%;
    left: 50%;
    transform: translate(-50%, -50%);
    animation: pulseHelper 1.5s infinite;
    z-index: 10;
}

@keyframes pulseHelper {
    0% { 
        transform: translate(-50%, -50%) scale(0.8); 
        opacity: 0.9; 
    }
    50% { 
        transform: translate(-50%, -50%) scale(1.2); 
        opacity: 1; 
        box-shadow: 
            0 0 15px #ffd700,
            0 0 30px rgba(255, 215, 0, 0.8);
    }
    100% { 
        transform: translate(-50%, -50%) scale(0.8); 
        opacity: 0.9; 
    }
}

.must-jump {
    box-shadow: 
        0 var(--piece-height) 15px rgba(0, 0, 0, 0.3),
        inset 2px 2px 5px var(--piece-shine),
        inset -2px -2px 5px rgba(0, 0, 0, 0.3),
        0 0 20px #ffd700,
        0 0 40px #ffd700 !important;
    animation: mustJumpPulse 1.5s infinite;
}

@keyframes mustJumpPulse {
    0%, 100% {
        transform: translate(-50%, -50%) translateZ(var(--piece-height)) scale(1);
    }
    50% {
        transform: translate(-50%, -50%) translateZ(calc(var(--piece-height) * 1.2)) scale(1.1);
    }
}

.game-message {
    position: absolute;
    top: 50%;
    left: 50%;
    transform: translate(-50%, -50%);
    background-color: rgba(0, 0, 0, 0.8);
    color: white;
    padding: 10px 20px;
    border-radius: 5px;
    z-index: 1000;
}

.modal {
    display: none;
    position: fixed;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    background-color: rgba(0, 0, 0, 0.7);
    z-index: 1000;
}

.modal-content {
    background-color: #fefefe;
    margin: 15% auto;
    padding: 20px;
    border: 1px solid #888;
    width: 80%;
    max-width: 500px;
    border-radius: 8px;
    box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
}

.modal h2 {
    color: #333;
    margin-bottom: 20px;
}

.modal button {
    padding: 10px 20px;
    font-size: 16px;
    cursor: pointer;
    background-color: #4CAF50;
    color: white;
    border: none;
    border-radius: 5px;
}

.modal button:hover {
    background-color: #45a049;
}

.splash-screen {
    position: fixed;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    background: linear-gradient(135deg, #1a237e, #311b92);
    display: flex;
    flex-direction: column;
    align-items: center;
    justify-content: center;
    z-index: 1000;
    color: white;
    transition: opacity 0.5s ease;
}

.splash-content {
    text-align: center;
    padding: 2rem;
    background: rgba(255, 255, 255, 0.1);
    backdrop-filter: blur(10px);
    border: 1px solid rgba(255, 255, 255, 0.2);
    box-shadow: 0 0 30px rgba(0, 0, 0, 0.3);
    animation: fadeIn 1s ease;
}

.splash-title {
    font-size: 3rem;
    margin-bottom: 1rem;
    text-shadow: 0 2px 4px rgba(0, 0, 0, 0.5);
}

.splash-button {
    padding: 1rem 2rem;
    font-size: 1.2rem;
    background: var(--red-gradient);
    box-shadow: 
        0 4px 15px rgba(0, 0, 0, 0.3),
        inset 1px 1px 1px rgba(255, 255, 255, 0.3);
    border: none;
    border-radius: 25px;
    color: white;
    cursor: pointer;
    transition: transform 0.2s ease, box-shadow 0.2s ease;
    margin: 10px;
}

.splash-button:hover {
    transform: translateY(-2px);
    box-shadow: 
        0 6px 20px rgba(0, 0, 0, 0.4),
        inset 1px 1px 1px rgba(255, 255, 255, 0.3);
}

@keyframes fadeIn {
    from { opacity: 0; transform: translateY(-20px); }
    to { opacity: 1; transform: translateY(0); }
}

.piece.moving {
    animation: moveJump 0.5s ease-out;
    z-index: 100;
}

@keyframes moveJump {
    0% {
        transform: translate(-50%, -50%) translateZ(var(--piece-height));
    }
    50% {
        transform: translate(-50%, -50%) translateZ(calc(var(--piece-height) * 4));
    }
    100% {
        transform: translate(-50%, -50%) translateZ(var(--piece-height));
    }
}

.particle {
    position: absolute;
    pointer-events: none;
    mix-blend-mode: screen;
    filter: blur(1px);
    background: var(--gold-gradient) !important;
    box-shadow: 0 0 10px var(--highlight-color);
    animation: particle 1.5s ease-out forwards;
}

@keyframes particle {
    0% {
        transform: translate(-50%, -50%) translateZ(30px) scale(1) rotate(0deg);
        opacity: 1;
    }
    100% {
        transform: translate(-50%, -50%) translateZ(50px) scale(0) rotate(360deg);
        opacity: 0;
    }
}

.capture-effect {
    position: absolute;
    width: 100%;
    height: 100%;
    background: radial-gradient(
        circle, 
        rgba(255, 23, 68, 0.9) 0%, 
        rgba(255, 23, 68, 0) 70%
    );
    box-shadow: 0 0 30px rgba(255, 23, 68, 0.8);
    mix-blend-mode: screen;
    animation: captureExpand 0.8s ease-out forwards;
}

@keyframes captureExpand {
    0% {
        transform: scale(0.5);
    }
    100% {
        transform: scale(2);
    }
}

/* Add these styles for the color selection buttons */
.color-select {
    margin-bottom: 2rem;
}

.color-buttons {
    display: flex;
    justify-content: center;
    gap: 1rem;
    margin: 1rem 0;
}

.color-button {
    padding: 0.8rem 1.5rem;
    font-size: 1.1rem;
    border: 2px solid rgba(255, 255, 255, 0.2);
    border-radius: 15px;
    cursor: pointer;
    transition: all 0.3s ease;
}

.color-button.red-button {
    background: var(--red-gradient);
    color: white;
}

.color-button.black-button {
    background: var(--black-gradient);
    color: white;
}

.color-button.active {
    transform: scale(1.1);
    box-shadow: 0 0 20px rgba(255, 255, 255, 0.3);
    border-color: rgba(255, 255, 255, 0.8);
}

.mode-select {
    margin-top: 1rem;
}

#victoryMessage {
    font-size: 1.2em;
    color: #333;
    margin-bottom: 20px;
}

.victory-details {
    font-size: 0.9em;
    color: #666;
    margin: 10px 0;
}

#newGameButton {
    background-color: #4CAF50;
    color: white;
    padding: 10px 20px;
    border: none;
    border-radius: 4px;
    cursor: pointer;
    font-size: 1em;
    transition: background-color 0.3s;
}

#newGameButton:hover {
    background-color: #45a049;
} 